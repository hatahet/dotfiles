#!/bin/sh

iptables=/sbin/iptables
iptcmd="sudo $iptables"
ssh='autossh'

die() {
    echo $2 1>&2
    exit $1
}
[ $# -ge 1 ] || die 1 "Not enough arguments"
[ -x $iptables ] || die 2 "$iptables doesn't exist"
[ -x `which $ssh` ] || ssh='ssh'
[ -x `which $ssh` ] || die 3 "no ssh client found"
[ -e $HOME/bin/proxyoff ] && die 4 "proxyoff exists; are you already proxied?"

proxyoff=`mktemp`
echo "#!/bin/sh" >$proxyoff
echo "$iptcmd -F" >>$proxyoff
$iptcmd -S | sed "s=^=$iptcmd =" >>$proxyoff

host=$1
port=$2
[ -z $port ] && port=22
user=$3
[ -z $user ] && user=`id -un`
ip=`dig +short "$host" a |egrep -v [A-Za-z]`

testport() {
    echo hi | nc 127.0.0.1 1080
    status=$?
    if [ $status -ne 0 ]
    then
        echo -n .
        sleep 1
        testport
    fi
}

echo -n Connecting to $user@$host:$port
$ssh -N -f -p "$port" -D 1080 "$user@$ip"
testport
PID=`pidof -s $ssh`
echo Done: $PID.
echo "kill $PID" >>$proxyoff
echo "rm $proxyoff" >>$proxyoff

set -x
$iptcmd -F
$iptcmd -P INPUT DROP
$iptcmd -P OUTPUT DROP
$iptcmd -A INPUT -i lo+ -j ACCEPT
$iptcmd -A OUTPUT -o lo+ -j ACCEPT
$iptcmd -A INPUT -s $ip -p tcp --sport $port -j ACCEPT
$iptcmd -A OUTPUT -d $ip -p tcp --dport $port -j ACCEPT
mv $proxyoff $HOME/bin/proxyoff && chmod +x $HOME/bin/proxyoff
